[{"/Users/albalucia/Desktop/my-app/src/App.js":"1","/Users/albalucia/Desktop/my-app/src/pages/home.jsx":"2","/Users/albalucia/Desktop/my-app/src/pages/form.jsx":"3","/Users/albalucia/Desktop/my-app/src/components/frontbar.jsx":"4","/Users/albalucia/Desktop/my-app/src/context/AuthContext.js":"5","/Users/albalucia/Desktop/my-app/src/pages/signUp.jsx":"6","/Users/albalucia/Desktop/my-app/src/pages/recover.jsx":"7","/Users/albalucia/Desktop/my-app/src/controllers/user.js":"8","/Users/albalucia/Desktop/my-app/src/index.js":"9","/Users/albalucia/Desktop/my-app/src/pages/login.jsx":"10","/Users/albalucia/Desktop/my-app/src/components/menu.jsx":"11"},{"size":910,"mtime":1606317566417,"results":"12","hashOfConfig":"13"},{"size":2199,"mtime":1606337650717,"results":"14","hashOfConfig":"13"},{"size":7752,"mtime":1606338513382,"results":"15","hashOfConfig":"13"},{"size":598,"mtime":1606336887967,"results":"16","hashOfConfig":"13"},{"size":635,"mtime":1606317566437,"results":"17","hashOfConfig":"13"},{"size":4219,"mtime":1606317566573,"results":"18","hashOfConfig":"13"},{"size":2086,"mtime":1606317566571,"results":"19","hashOfConfig":"13"},{"size":671,"mtime":1606317566444,"results":"20","hashOfConfig":"13"},{"size":500,"mtime":1606148282858,"results":"21","hashOfConfig":"13"},{"size":2353,"mtime":1606317566570,"results":"22","hashOfConfig":"13"},{"size":1944,"mtime":1606335547405,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12sqryr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"/Users/albalucia/Desktop/my-app/src/App.js",[],["50","51"],"/Users/albalucia/Desktop/my-app/src/pages/home.jsx",[],"/Users/albalucia/Desktop/my-app/src/pages/form.jsx",["52","53"],"import React, { useState } from \"react\";\nimport { storage } from \"../firebase/firebase.config\";\nimport { addUser } from \"../controllers/user\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Col, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MenuNav from \"../components/menu\"\nimport FrontBar from \"../components/frontbar\"\nimport \"../style/form.css\";\nimport \"../style/frontBar.css\";\nimport add from '../img/add.png';\nimport user from '../img/user.png'\n\nexport default function FormUpload() {\n  const history = useHistory();\n  const [url, setURL] = useState(\"\");\n  const [entity, setEntity] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [nowDate, setNowDate] = useState(\"\");\n  const [expiredDate, setExpiredDate] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const [others, setOthers] = useState(\"\");\n  const [labels, setLabels] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const handleEntity = (e) => setEntity(e.currentTarget.value);\n  const handleRecord = (e) => setRecord(e.currentTarget.value);\n  const handleTopic = (e) => setTopic(e.currentTarget.value);\n  const handleArea = (e) => setArea(e.currentTarget.value);\n  const handleNowDate = (e) => setNowDate(e.currentTarget.value);\n  const handleExpiredDate = (e) => setExpiredDate(e.currentTarget.value);\n  const handleReason = (e) => setReason(e.currentTarget.value);\n  const handleOthers = (e) => setOthers(e.currentTarget.value);\n  const handleLabels = (e) => setLabels(e.currentTarget.value);\n\n  function handleUpload(file) {\n    const uploadTask = storage.ref(`oficios/${file.name}`).put(file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      storage\n        .ref(\"oficios\")\n        .child(file.name)\n        .getDownloadURL()\n        .then((url) => {\n          setURL(url);\n        });\n    });\n  }\n\n  function handleChange(e) {\n    const file = e.target.files[0];\n    handleUpload(file);\n    setFile(file);\n  }\n\n  // function addDocument(data) {\n  //   db.collection(\"expedientes\").add(data);\n  // }\n\n  function handleSend() {\n    const info = {\n      entidad: entity,\n      expediente: record,\n      tema: topic,\n      Area: area,\n      fecha_entrada: nowDate,\n      fecha_expiracion: expiredDate,\n      motivo: reason,\n      Otros: others,\n      etiquetas: labels,\n      archivo: url,\n    };\n\n    addUser(info)\n    .then((docRef) => {\n     history.push({\n    pathname: \"/home\",\n    state: { userId: docRef.id },\n      });\n    });\n\n    setEntity(\"\");\n    setRecord(\"\");\n    setReason(\"\");\n    setTopic(\"\");\n    setArea(\"\");\n    setNowDate(\"\");\n    setExpiredDate(\"\");\n    setReason(\"\");\n    setOthers(\"\");\n    setLabels(\"\");\n    setFile(null);\n  }\n\n  return (\n    <div className=\"page\">\n  \n\n      <MenuNav></MenuNav>\n      <div className=\"page-content\">\n      {/* <div className=\"front\">\n        <div className=\"front-user\">\n        <p className=\"front-user-text\"> Nombre usuario</p>\n        <img className=\"front-user-logo\" src={user} alt=\"\"/>\n        </div>\n      </div> */}\n      <FrontBar></FrontBar>\n      <Container className=\"container-form\">\n        <h2 className=\"title-form\">AGREGAR DOCUMENTO</h2>\n        <p>Ingresa los datos solicitados y luego presiona GUARDAR</p>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Entidad</Form.Label>\n              <Form.Control className =\"input-form\"\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                onChange={handleEntity}\n              >\n                <option>Selecciona...</option>\n                <option>OSINERGMIN</option>\n                <option>OEFA</option>\n                <option>MINEM</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Número de Expediente</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={record}\n                onChange={handleRecord}\n                required\n                className =\"input-form\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Tema</Form.Label>\n              <Form.Control value={topic} onChange={handleTopic} className =\"input-form\"  />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Motivo</Form.Label>\n            <Form.Control\n            className =\"input-form\"\n              as=\"textarea\"\n              rows={3}\n              value={reason}\n              onChange={handleReason}\n              required\n            />\n          </Form.Group>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Area legal encargada</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                onChange={handleArea}\n                className =\"input-form\"\n              >\n                <option>Selecciona...</option>\n                <option>TGP</option>\n                <option>COGA</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Fecha de recepción</Form.Label>\n              <Form.Control\n                type=\"date\"\n                value={expiredDate}\n                onChange={handleExpiredDate}\n                required\n                className =\"input-form\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <Form.Label>Fecha de vencimiento</Form.Label>\n              <Form.Control\n                type=\"date\"\n                value={nowDate}\n                onChange={handleNowDate}\n                required\n                className =\"input-form\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Otros</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                onChange={handleOthers}\n                className =\"input-form\"\n              >\n                <option>Selecciona...</option>\n                <option>APORTES POR SU REGULACIÓN</option>\n                <option>DERRAME/ FUGA/ SINIESTRO</option>\n              </Form.Control>\n              {/* <Form.Control value={others} onChange={handleOthers} required className =\"input-form\"/> */}\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Agregar etiqueta</Form.Label>\n              <Form.Control value={labels} onChange={handleLabels} required className =\"input-form\"/>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.File\n                id=\"exampleFormControlFile1\"\n                label=\"Sube el documento\"\n                type=\"file\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Button\n            className=\"btn-form\"\n            variant=\"primary\"\n            disabled={\n              !file ||\n              !url ||\n              !entity ||\n              !record ||\n              !topic ||\n              !area ||\n              !nowDate ||\n              !expiredDate ||\n              !reason \n            }\n            onClick={handleSend}\n          >\n            Guardar\n          </Button>\n        </Form>\n      </Container>\n      </div>\n    </div>\n  );\n}\n","/Users/albalucia/Desktop/my-app/src/components/frontbar.jsx",["54"],"import React from \"react\";\nimport add from \"../img/add.png\";\nimport user from \"../img/user.png\";\n\n\n// const Button = ({ cName, onClick, img, text }) => (\n//   <button\n//     className={cName}\n//     type=\"button\"\n//     onClick={onClick}\n//   >\n//     {img}\n//     {text}\n//   </button>\n// );\n\n// export default Button;\n\nconst FrontBar = ({searcher}) => (\n  <div className=\"front\">\n      {searcher}\n    <div className=\"front-user\">\n      <p className=\"front-user-text\"> Nombre usuario</p>\n      <img className=\"front-user-logo\" src={user} alt=\"\" />\n    </div>\n  </div>\n);\n\nexport default FrontBar;\n","/Users/albalucia/Desktop/my-app/src/context/AuthContext.js",[],"/Users/albalucia/Desktop/my-app/src/pages/signUp.jsx",[],"/Users/albalucia/Desktop/my-app/src/pages/recover.jsx",[],"/Users/albalucia/Desktop/my-app/src/controllers/user.js",[],"/Users/albalucia/Desktop/my-app/src/index.js",[],"/Users/albalucia/Desktop/my-app/src/pages/login.jsx",[],"/Users/albalucia/Desktop/my-app/src/components/menu.jsx",["55"],"import React from \"react\";\nimport { Menu } from 'antd';\nimport {  HomeFilled , SettingOutlined, HddFilled } from '@ant-design/icons';\nimport 'antd/dist/antd.css'\nimport '../style/menu.css'\nimport logo from '../img/logo.png'\n\n\nconst { SubMenu } = Menu;\n\n// submenu keys of first level\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\n\n const MenuNav = () => {\n  const [openKeys, setOpenKeys] = React.useState(['sub1']);\n\n  const onOpenChange = keys => {\n    const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n      setOpenKeys(keys);\n    } else {\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n    }\n  };\n\n  return (\n    <Menu mode=\"inline\" className=\"menu\"openKeys={openKeys} onOpenChange={onOpenChange} style={{ width: 224 }}>\n        <img src={logo} alt=\"logo\" className=\"menu-logo\"/>\n        <p className=\"logo-title1\">Plataforma de acceso</p><p className=\"logo-title\">a documentos </p>\n      <Menu.Item key=\"mail\" icon={<HomeFilled />} className=\"list\">\n        {/* <Menu.Item className=\"item\" key=\"1\">Option 1</Menu.Item>\n        <Menu.Item key=\"2\">Option 2</Menu.Item>\n        <Menu.Item key=\"3\">Option 3</Menu.Item>\n        <Menu.Item key=\"4\">Option 4</Menu.Item> */}\n        Principal\n      </Menu.Item>\n      <SubMenu key=\"sub2\" icon={<HddFilled />} title=\"TGP\">\n      <Menu.Item key=\"4\">G.Legal</Menu.Item>\n        <Menu.Item key=\"5\">G.Sostenibilidad y comunicación 5</Menu.Item>\n        <Menu.Item key=\"6\">G.Planeación y control</Menu.Item>\n        <Menu.Item key=\"7\">G.Cormercial y Operaciones</Menu.Item>\n      </SubMenu>\n      <SubMenu key=\"sub4\" icon={<HddFilled />} title=\"COGA\">\n        <Menu.Item key=\"9\">Option 9</Menu.Item>\n        <Menu.Item key=\"10\">Option 10</Menu.Item>\n        <Menu.Item key=\"11\">Option 11</Menu.Item>\n        <Menu.Item key=\"12\">Option 12</Menu.Item>\n      </SubMenu>\n    </Menu>\n  );\n};\n\nexport default MenuNav;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":11,"column":8,"nodeType":"62","messageId":"63","endLine":11,"endColumn":11},{"ruleId":"60","severity":1,"message":"64","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":11},{"ruleId":"60","severity":1,"message":"65","line":3,"column":24,"nodeType":"62","messageId":"63","endLine":3,"endColumn":39},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'add' is defined but never used.","Identifier","unusedVar","'user' is defined but never used.","'SettingOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]